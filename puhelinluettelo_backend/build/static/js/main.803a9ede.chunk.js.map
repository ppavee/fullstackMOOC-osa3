{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","handleChange","onChange","PersonForm","props","onSubmit","handleSubmit","nameValue","handleNameChange","numberValue","handleNumberChange","type","Person","person","handleRemove","name","number","onClick","id","Persons","persons","map","key","Notification","cssClass","message","className","baseUrl","axios","get","newObject","post","delete","updatedObject","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setNewSearchTerm","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personsService","then","response","data","filteredPersons","filter","toLowerCase","includes","event","target","preventDefault","indexOfPerson","indexOf","window","confirm","oldPerson","newPerson","setTimeout","catch","error","concat","personToDelete","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.803a9ede.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({value, handleChange}) => {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input value={value} onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n                <div>\r\n                    name: <input value={props.nameValue} onChange={props.handleNameChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={props.numberValue} onChange={props.handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, handleRemove }) => {\r\n    return (\r\n        <p>\r\n            {person.name} {person.number}\r\n            <button onClick={() => handleRemove(person.id)} >\r\n                delete\r\n            </button>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, handleRemove}) => {\r\n    return (\r\n        <>\r\n            {persons.map(person =>\r\n            <Person key={person.name} person={person} handleRemove={handleRemove} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ cssClass, message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={cssClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst put = updatedObject => {\r\n    return axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {getAll, create, remove, put}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\n\r\nimport personsService from './services/persons'\r\n\r\nimport './index.css'\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [searchTerm, setNewSearchTerm] = useState('')\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personsService\r\n            .getAll()\r\n            .then(response => {\r\n                setPersons(response.data)\r\n            })\r\n    }, [])\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleSearchTermChange = (event) => {\r\n        setNewSearchTerm(event.target.value)\r\n    }\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const names = persons.map(person => person.name)\r\n        const indexOfPerson = names.indexOf(newName)\r\n        if (newNumber && indexOfPerson !== -1) {\r\n            if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                const oldPerson = persons[indexOfPerson]\r\n                const newPerson = {...oldPerson, number: newNumber}\r\n                personsService\r\n                    .put(newPerson)\r\n                    .then(response => {\r\n                        setPersons(persons.map(person => person.id !== newPerson.id ? person : newPerson))\r\n                        setSuccessMessage(`Number updated for contact ${newPerson.name}`)\r\n                        setTimeout(() => setSuccessMessage(null), 5000)\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(`Information of ${newPerson.name} has already been removed from server`)\r\n                        setTimeout(() => setErrorMessage(null), 5000)\r\n                    })\r\n            }\r\n        } else if(newNumber) {\r\n            const newPerson = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personsService\r\n                .create(newPerson)\r\n                .then(response => {\r\n                    newPerson.id = response.data.id\r\n                    setPersons(persons.concat(newPerson))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setSuccessMessage(`Added ${newPerson.name}`)\r\n                    setTimeout(() => setSuccessMessage(null), 5000)\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(error.response.data.error)\r\n                    setTimeout(() => setErrorMessage(null), 5000)\r\n                })\r\n\r\n        } else {\r\n            setErrorMessage(`Please provide a number`)\r\n            setTimeout(() => setErrorMessage(null), 5000)\r\n        }\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        const personToDelete = persons.find(person => person.id === id)\r\n        if(personToDelete.id && window.confirm(`Delete ${personToDelete.name}?`)) {\r\n            personsService\r\n                .remove(id)\r\n                .then(response => {\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                    setSuccessMessage(`Deleted ${personToDelete.name}`)\r\n                    setTimeout(() => setSuccessMessage(null), 5000)\r\n                })\r\n        }\r\n    }\r\n\r\n    const filteredPersons = persons.filter(person => (!searchTerm || person.name.toLowerCase().includes(searchTerm.toLowerCase())))\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification cssClass='success' message={successMessage} />\r\n            <Notification cssClass='error' message={errorMessage} />\r\n            <Filter value={searchTerm} handleChange={handleSearchTermChange} />\r\n            <h3>Add a new</h3>\r\n            <PersonForm\r\n                handleSubmit={addPerson}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n                nameValue={newName}\r\n                numberValue={newNumber}\r\n            />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={filteredPersons} handleRemove={handleRemove} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}